name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Run tests
        run: make test

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-without-goreleaser:
    name: Build binaries (fallback)
    runs-on: ubuntu-latest
    if: failure()
    needs: release
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: windows
            arch: amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Get version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          VERSION=${{ steps.version.outputs.version }}
          COMMIT=$(git rev-parse --short HEAD)
          DATE=$(date -u +"%Y-%m-%d")
          LDFLAGS="-X main.version=${VERSION} -X main.commit=${COMMIT} -X main.date=${DATE}"
          
          OUTPUT_NAME="battop-${{ matrix.os }}-${{ matrix.arch }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi
          
          go build -ldflags "${LDFLAGS}" -trimpath -o "${OUTPUT_NAME}" ./cmd/battop/main.go

      - name: Create archive
        run: |
          if [ "${{ matrix.os }}" = "windows" ]; then
            zip "battop-${{ matrix.os }}-${{ matrix.arch }}.zip" "battop-${{ matrix.os }}-${{ matrix.arch }}.exe"
          else
            tar czf "battop-${{ matrix.os }}-${{ matrix.arch }}.tar.gz" "battop-${{ matrix.os }}-${{ matrix.arch }}"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: battop-${{ matrix.os }}-${{ matrix.arch }}
          path: battop-${{ matrix.os }}-${{ matrix.arch }}.*

  create-release-fallback:
    name: Create Release (fallback)
    runs-on: ubuntu-latest
    if: failure()
    needs: build-without-goreleaser
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create checksums
        run: |
          cd artifacts
          sha256sum */battop-* > checksums.txt

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*/battop-*
            artifacts/checksums.txt
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}