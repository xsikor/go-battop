# .goreleaser.yml
project_name: battop

before:
  hooks:
    - go mod tidy
    - go mod download

builds:
  - id: battop
    main: ./cmd/battop/main.go
    binary: battop
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    # Skip unsupported combinations
    ignore:
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.ShortCommit}}
      - -X main.date={{.Date}}
    mod_timestamp: '{{ .CommitTimestamp }}'

archives:
  - id: battop
    name_template: >-
      {{ .ProjectName }}-
      {{- .Version }}-
      {{- .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

snapshot:
  name_template: "{{ .Tag }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^build:'
      - '^style:'
      - '^refactor:'
      - 'typo'
      - 'Merge pull request'
      - 'Merge branch'
  groups:
    - title: 'Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Performance improvements'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: 'Other changes'
      order: 999

release:
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: battop
  prerelease: auto
  draft: false
  name_template: "{{.ProjectName}} v{{.Version}}"
  footer: |
    ## Installation

    ### macOS/Linux
    ```bash
    # Download and extract (replace OS and ARCH)
    curl -L https://github.com/{{ .Env.GITHUB_REPOSITORY }}/releases/download/{{ .Tag }}/battop-{{ .Tag }}-{OS}-{ARCH}.tar.gz | tar xz
    
    # Move to PATH
    sudo mv battop /usr/local/bin/
    ```

    ### Windows
    Download the Windows zip file and extract `battop.exe` to a directory in your PATH.

    ### Homebrew (macOS/Linux)
    ```bash
    brew tap {{ .Env.GITHUB_REPOSITORY_OWNER }}/tap
    brew install battop
    ```

brews:
  - name: battop
    tap:
      owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
      name: homebrew-tap
      branch: main
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: "https://github.com/{{ .Env.GITHUB_REPOSITORY }}"
    description: "Terminal-based battery monitoring tool"
    license: "MIT"
    skip_upload: auto
    test: |
      system "#{bin}/battop", "-version"
    install: |
      bin.install "battop"

nfpms:
  - id: packages
    package_name: battop
    file_name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    vendor: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    homepage: "https://github.com/{{ .Env.GITHUB_REPOSITORY }}"
    maintainer: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    description: "Terminal-based battery monitoring tool"
    license: MIT
    formats:
      - deb
      - rpm
      - apk
    bindir: /usr/bin
    section: utils
    priority: optional
    meta: false
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/battop/LICENSE
      - src: ./README.md
        dst: /usr/share/doc/battop/README.md

dockers:
  - use: buildx
    goos: linux
    goarch: amd64
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/battop:{{ .Version }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/battop:latest-amd64"
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    skip_push: auto
    dockerfile: |
      FROM alpine:latest
      RUN apk --no-cache add ca-certificates
      COPY battop /usr/local/bin/
      ENTRYPOINT ["battop"]

  - use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/battop:{{ .Version }}-arm64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/battop:latest-arm64"
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    skip_push: auto
    dockerfile: |
      FROM alpine:latest
      RUN apk --no-cache add ca-certificates
      COPY battop /usr/local/bin/
      ENTRYPOINT ["battop"]

docker_manifests:
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/battop:{{ .Version }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/battop:{{ .Version }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/battop:{{ .Version }}-arm64"
    skip_push: auto

  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/battop:latest"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/battop:latest-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/battop:latest-arm64"
    skip_push: auto